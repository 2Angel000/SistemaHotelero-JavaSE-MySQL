/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.Globales;
import clases.Queries;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import modelo.Conexion;

/**
 *
 * @author mcsmo
 */
public final class Reservas extends javax.swing.JPanel {
  PreparedStatement ps, pst;
    Statement instruccion;
    ResultSet rs;
    Conexion conn = new Conexion();
    Connection conectar = conn.getConnection();
    /**
     * Creates new form Reservas
     */
    public Reservas() {
        initComponents();
        AsignarNombres();
        VerRegistros();
        HiloActualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReservas = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRegistros = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 418));

        lblReservas.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lblReservas.setText("jLabel1");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N

        TablaRegistros.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        TablaRegistros.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TablaRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Telefono", "Habitación", "Tipo de Habitación", "No. Camas", "No.Personas", "Precio", "Check-In", "Check-Out"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaRegistros.setEnabled(false);
        TablaRegistros.setRowHeight(21);
        TablaRegistros.setRowSelectionAllowed(false);
        TablaRegistros.setSelectionBackground(new java.awt.Color(153, 204, 255));
        jScrollPane1.setViewportView(TablaRegistros);
        if (TablaRegistros.getColumnModel().getColumnCount() > 0) {
            TablaRegistros.getColumnModel().getColumn(0).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(1).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(2).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(3).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(4).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(5).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(6).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(7).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(8).setResizable(false);
            TablaRegistros.getColumnModel().getColumn(9).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 648, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaRegistros;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblReservas;
    // End of variables declaration//GEN-END:variables

   public void AsignarNombres() {
        lblReservas.setText(Globales.Reservaciones);
    }
   
        
      //id, nombre, telefono, habitacion, tipoH, No.Camas, No.Personas, Precio, Checkin,checkout
     //s*f id | nombre ,telefono ,habitacion_id, precio,checkin, checkout,
     public void VerRegistros(){
         DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id");
        model.addColumn("nombre");
        model.addColumn("telefono");
        model.addColumn("habitacion");
        model.addColumn("tipo_habitacion");
        model.addColumn("no_camas");
        model.addColumn("no_personas");
        model.addColumn("precio");
        model.addColumn("checkin");
        model.addColumn("checkout");
        TablaRegistros.setModel(model);
        String[] datos = new String[10];
        try {
            Statement st = conectar.createStatement();
            ResultSet rs2 = st.executeQuery(Queries.registrosAll);
            while(rs2.next()){
                datos[0] = rs2.getString("id");
                datos[1] = rs2.getString("nombre");
                datos[2] = rs2.getString("telefono");
                datos[3] = rs2.getString("habitacion");
                datos[4] = rs2.getString("tipo_habitacion");
                datos[5] = rs2.getString("no_camas");
                datos[6] = rs2.getString("no_personas");
                datos[7] = rs2.getString("precio");
                datos[8] = rs2.getString("checkin");
                datos[9] = rs2.getString("checkout");
                model.addRow(datos);
            }
            TablaRegistros.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(Reservas.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     //hilo
     private void HiloActualizar(){
         Timer hilo = new Timer();
         hilo.schedule(new TimerTask(){
             @Override
             public void run(){
                 SwingUtilities.invokeLater(()->{
                     VerRegistros();
                 });
             }
         },0,1000);
     }
   
}
